var documenterSearchIndex = {"docs":
[{"location":"basics/triplets/#Cannonical-Triplets-and-Component-Sets-1","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"","category":"section"},{"location":"basics/triplets/#Cannonical-Triplets-1","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets","text":"","category":"section"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"A cannonical triplet Tuple{Function,Function,Real} is a tuple consisting of an instantaneous amplitude (IA) Function, an instantaneous frequency (IF) Function, and a phase reference Real.","category":"page"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"mathscrCtriangleqlefta(t)omega(t) phivphantom0^0right","category":"page"},{"location":"basics/triplets/#Defining-a-Cannonical-Triplet-1","page":"Cannonical Triplets and Component Sets","title":"Defining a Cannonical Triplet","text":"","category":"section"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"We can define a cannonical triplet as follows.","category":"page"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"julia> a₀(t) = exp(-t^2)\r\na₀ (generic function with 1 method)\r\n\r\njulia> ω₀(t) = 2.0\r\nω₀ (generic function with 1 method)\r\n\r\njulia> φ₀ = 0.0\r\n0.0\r\n\r\njulia> 𝐶₀ = (a₀,ω₀,φ₀)\r\n(a₀, ω₀, 0.0)","category":"page"},{"location":"basics/triplets/#Component-Sets-1","page":"Cannonical Triplets and Component Sets","title":"Component Sets","text":"","category":"section"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"A component set Array{Tuple{Function,Function,Real},1} is a set of cannonical triplet Tuple{Function,Function,Real} .","category":"page"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"mathscrStriangleqleftmathscrC_0mathscrC_1cdotsmathscrC_K-1vphantom0^0right","category":"page"},{"location":"basics/triplets/#Defining-a-Component-Set-1","page":"Cannonical Triplets and Component Sets","title":"Defining a Component Set","text":"","category":"section"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"We can define a component set as follows. First, we define several cannonical triplet.","category":"page"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"a₀(t) = exp(-t^2)\r\nω₀(t) = 2.0\r\nφ₀ = 0.0\r\n𝐶₀ = (a₀,ω₀,φ₀)\r\n\r\na₁(t) = 1.0\r\nω₁(t) = 10*t\r\nφ₁ = 0.1\r\n𝐶₁ = (a₁,ω₁,φ₁)\r\n\r\na₂(t) = 0.8*cos(2t)\r\nω₂(t) = 10 + 7.5*sin(t)\r\nφ₂ = π\r\n𝐶₂ = (a₂,ω₂,φ₂)","category":"page"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"Then, store the cannonical triplets in an array.","category":"page"},{"location":"basics/triplets/#","page":"Cannonical Triplets and Component Sets","title":"Cannonical Triplets and Component Sets","text":"julia> 𝑆 = [𝐶₀,𝐶₁,𝐶₂]\r\n3-element Array{Tuple{Function,Function,Real},1}:\r\n (a₀, ω₀, 0.0)\r\n (a₁, ω₁, 0.1)\r\n (a₂, ω₂, π)","category":"page"},{"location":"distributions/STFT/#Short-time-Fourier-Transform-(STFT)-1","page":"Distributions","title":"Short-time Fourier Transform (STFT)","text":"","category":"section"},{"location":"distributions/STFT/#Example-1","page":"Distributions","title":"Example","text":"","category":"section"},{"location":"distributions/STFT/#","page":"Distributions","title":"Distributions","text":"using ISA\r\nusing Plots\r\n\r\nfs=500\r\nt = collect(0.0:1/fs:2.0)\r\na₀(t) = exp(-t^2)\r\nω₀(t) = 50\r\nφ₀ = 0\r\n𝐶₀ = Tuple([a₀,ω₀,φ₀])\r\na₁(t) = exp(-(t-1.0)^2)\r\nω₁(t) = 2*π*100 + 150*sin(2t)\r\nφ₁ = π\r\n𝐶₁ = Tuple([a₁,ω₁,φ₁])\r\na₂(t) = 0.8*cos(2t)\r\nω₂(t) = 2*π*(-100 + 50t)\r\nφ₂ = π\r\n𝐶₂ = Tuple([a₂,ω₂,φ₂])\r\n𝑆 = [𝐶₀,𝐶₁,𝐶₂]\r\nz = AMFMmodel(𝑆)\r\n\r\np1 = isaPlot3d(z, t, FreqUnits=\"Hz\")\r\n\r\nwindowFunction = ones(Float64,25)\r\nframeAdvance = 1\r\nZ,freqs = STFT(z(t), windowFunction, frameAdvance,fs=fs)\r\n\r\np2 = contour(t[1:frameAdvance:end], freqs, abs.(reduce(hcat,Z)), fill=:true, seriescolor=cgrad(ISA.cmap),levels=5 )\r\n\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"decomposition/EMD/#EMD-Based-Methods-1","page":"Decomposition","title":"EMD-Based Methods","text":"","category":"section"},{"location":"decomposition/EMD/#The-(Real)-Sifting-Algorithm-1","page":"Decomposition","title":"The (Real) Sifting Algorithm","text":"","category":"section"},{"location":"decomposition/EMD/#","page":"Decomposition","title":"Decomposition","text":"using ISA\r\nusing Plots\r\nsig = cos.(0.0:π/100:10pi) +  cos.( 5*(0.0:π/100:10pi))+  cos.( 20*(0.0:π/100:10pi))\r\nφ₁ = SIFT(sig)\r\nplot(sig)\r\nplot!(φ₁)\r\nφ₂ = SIFT(sig-φ₁)\r\nplot!(φ₂)\r\nplot!(sig-φ₁-φ₂)","category":"page"},{"location":"decomposition/EMD/#The-(Real)-EMD-Algorithm-1","page":"Decomposition","title":"The (Real) EMD Algorithm","text":"","category":"section"},{"location":"decomposition/EMD/#","page":"Decomposition","title":"Decomposition","text":"using ISA\r\nusing Plots\r\nsig = cos.(0.0:π/100:10pi) +  cos.( 5*(0.0:π/100:10pi))+  cos.( 20*(0.0:π/100:10pi))\r\nIMF = EMD(sig)\r\nplot(sig)\r\nplot!(IMF)","category":"page"},{"location":"decomposition/EMD/#The-Complex-Sifting-Algorithm-1","page":"Decomposition","title":"The Complex Sifting Algorithm","text":"","category":"section"},{"location":"decomposition/EMD/#","page":"Decomposition","title":"Decomposition","text":"using ISA\r\nusing Plots\r\nsig = exp.( 1im*(0.0:π/100:10pi)) +  exp.( 5im*(0.0:π/100:10pi)) +  exp.( 20im*(0.0:π/100:10pi))\r\nφ₁ = ℂSIFT(sig)\r\nplot(real(sig))\r\nplot!(real(φ₁))\r\nφ₂ = ℂSIFT(sig-φ₁)\r\nplot!(real(φ₂))\r\nplot!(real(sig-φ₁-φ₂))","category":"page"},{"location":"decomposition/EMD/#The-Complex-EMD-Algorithm-1","page":"Decomposition","title":"The Complex EMD Algorithm","text":"","category":"section"},{"location":"decomposition/EMD/#","page":"Decomposition","title":"Decomposition","text":"using ISA\r\nusing Plots\r\nsig = exp.( 1im*(0.0:π/100:10pi)) +  exp.( 5im*(0.0:π/100:10pi)) +  exp.( 20im*(0.0:π/100:10pi))\r\nIMF = ℂEMD(sig)\r\nplot(real(sig))\r\nplot!(real.(IMF))","category":"page"},{"location":"basics/spectra/#Instantaneous-Spectra-1","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"","category":"section"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"A component set Array{Tuple{Function,Function,Real},1} maps to an instantaneous spectrum (IS).","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"The two-dimensional (2-D) IS in the time-frequency coordinates for a signal expressed with set of canonical triplets  mathscrS=mathscrC_0mathscrC_1cdotsmathscrC_K-1 is given by","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"mathcalS(tomegamathscrS)  =  2 pi sumlimits_k=0^K-1 psi_kleft( t  mathscrC_k vphantom0^0right)deltaleft(vphantom0^0omega-omega_k(t)vphantom0^0right)","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"and  three-dimensional (3-D) IS in the time-frequency-real coordinates is given by","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"mathcalS(tomegasmathscrS) = 2 pi sumlimits_k=0^K-1 psi_kleft( t  mathscrC_k vphantom0^0right) ^2deltaleft(omega-omega_k(t)s-s_k(t)vphantom0^0right)","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"Visualization for ISs are provided in the ISA module.","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"using ISA","category":"page"},{"location":"basics/spectra/#Visualizing-an-Instantaneous-Spectrum-1","page":"Instantaneous Spectra","title":"Visualizing an Instantaneous Spectrum","text":"","category":"section"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"We can visualize a 3-D IS as follows. First, define a component set.","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"a₀(t) = exp(-t^2)\nω₀(t) = 2.0\nφ₀ = 0.0\n𝐶₀ = (a₀,ω₀,φ₀)\n\na₁(t) = 1.0\nω₁(t) = 10*t\nφ₁ = 0.1\n𝐶₁ = (a₁,ω₁,φ₁)\n\na₂(t) = 0.8*cos(2t)\nω₂(t) = 10 + 7.5*sin(t)\nφ₂ = π\n𝐶₂ = (a₂,ω₂,φ₂)\n\n𝑆 = [𝐶₀,𝐶₁,𝐶₂]","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"Then, pass the component set Array{Tuple{Function,Function,Real},1} and a time index Array{Float64,1} to the function isaPlot3d().","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"t = 0.0:0.005:2.0\nisaPlot3d(𝑆, t)","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"(Image: )","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"NOTE: isaPlot3d() is still under development.","category":"page"},{"location":"basics/spectra/#","page":"Instantaneous Spectra","title":"Instantaneous Spectra","text":"~!~ MORE/BETTER VISUALIZATION TOOLS ARE CURRENTLY IN DEVELOPMENT ~!~","category":"page"},{"location":"cite/#Citation-1","page":"Citation","title":"Citation","text":"","category":"section"},{"location":"cite/#","page":"Citation","title":"Citation","text":"If you use this module in your research, please cite the following work.","category":"page"},{"location":"cite/#","page":"Citation","title":"Citation","text":"Sandoval, Steven, and Phillip L. De Leon. \"The Instantaneous Spectrum: A General Framework for Time-Frequency Analysis.\" IEEE Transactions on Signal Processing 66.21 (2018): 5679-5693.","category":"page"},{"location":"cite/#","page":"Citation","title":"Citation","text":"@article{Sandoval2018ISA,\n           title = {The Instantaneous Spectrum: A General Framework for\n                    Time-Frequency Analysis},\n           author = {S.~Sandoval and P.~L.~{De~Leon}},\n           journal = {{IEEE Trans.~Sig.~Process.}},\n           volume = {66},\n           year = {2018},\n           month = {Nov},\n           pages = {5679-5693}\n}","category":"page"},{"location":"basics/componentsNumerical/#Numerical-AM–FM-Components-1","page":"Numerical Components","title":"Numerical AM–FM Components","text":"","category":"section"},{"location":"basics/componentsNumerical/#","page":"Numerical Components","title":"Numerical Components","text":"A Numerical AM–FM component AMFMcompN is a complex vector Vector{ComplexF64} which has be demodulated using the function AMFMdemod().","category":"page"},{"location":"basics/componentsNumerical/#","page":"Numerical Components","title":"Numerical Components","text":"using ISA\nusing Plots\n\na₀(t) = exp(-t^2)\nω₀(t) = 25\nφ₀ = 0\n𝐶₀ = Tuple([a₀,ω₀,φ₀])\nψ₀ = AMFMcomp(𝐶₀)\na₁(t) = exp(-0.5t^2)\nω₁(t) = 10 + 3*sin(t)\nφ₁ = 0\n𝐶₁ = Tuple([a₁,ω₁,φ₁])\nψ₁ = AMFMcomp(𝐶₁)\n\nt = -1.0:0.01:1.0\n\np1 = isaPlot3d(ψ₀,t)\np2 = isaPlot3d(AMFMmodel([ψ₀,ψ₁]),t)\n\n#COMPONENT OBSERVATION\nΨ₀ = ψ₀(t)\nΨ₁ = ψ₁(t)\n\n#ESTIMATE NUMERICAL COMPONENT\n𝚿₀ = AMFMdemod(Ψ₀,t)\n𝚿₁ = AMFMdemod(Ψ₁,t)\n\np3 = isaPlot3d(𝚿₀)\np4 = isaPlot3d([𝚿₀,𝚿₁])\nplot(p1,p2,p3,p4)","category":"page"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [ISA]","category":"page"},{"location":"#ISA.jl:-The-Julia-Library-for-Instantaneous-Spectral-Analysis-1","page":"Home","title":"ISA.jl: The Julia Library for Instantaneous Spectral Analysis","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"#","page":"Home","title":"Home","text":"In January of 2020, we began to re-implement our ISA tools in the Julia programing language. This module is still in development–-Please be patient as we continue to add new features.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#Users-1","page":"Home","title":"Users","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Download Julia 1.3 or later, if you haven't already.\nAdd the ISA module entering the following at the REPL ]add https://github.com/ssandova/ISA.","category":"page"},{"location":"#Student-Developers-1","page":"Home","title":"Student Developers","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Download/Clone the ISA module to username/.julia/dev/.\nEnter the package manager in REPL by pressing ]  then add the package by typing dev ISA rather than add ISA.","category":"page"},{"location":"basics/components/#AM–FM-Components-1","page":"AM–FM Components","title":"AM–FM Components","text":"","category":"section"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"A component triplet Tuple{Function,Function,Real} maps to an AM–FM component AMFMcomp.","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"psi_k left( t  mathscrC_k vphantom0^0right) triangleq a_k(t) expleft(mathrmj leftint_-infty^t omega_k(tau)mathrmdtau +phi_kright right)","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"This mapping is provided in the ISA module.","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"using ISA","category":"page"},{"location":"basics/components/#Defining-an-AM–FM-Component-1","page":"AM–FM Components","title":"Defining an AM–FM Component","text":"","category":"section"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"We define an AM–FM component AMFMcomp by passing the function AMFMcomp() a cannonical triplet. First define a cannonical triplet.","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"a₀(t) = exp(-t^2)\nω₀(t) = 2.0\nφ₀ = 0.0\n𝐶₀ = (a₀,ω₀,φ₀)","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"Then pass the cannonical triplet to the function AMFMcomp().","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"julia> ψ₀ = AMFMcomp(𝐶₀)\nAMFMcomp(a₀, ω₀, 0.0)","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"We also allow an AM–FM component AMFMcomp to be defined by passing the function AMFMcomp() an instantaneous amplitude (IA) Function, an instantaneous frequency (IF) Function, and a phase reference Real.","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"a₀(t) = exp(-t^2)\nω₀(t) = 2.0\nφ₀ = 0.0","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"Then calling the function AMFMcomp() as follows.","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"julia> ψ₀ = AMFMcomp(a₀,ω₀,φ₀)\nAMFMcomp(a₀, ω₀, 0.0)","category":"page"},{"location":"basics/components/#Evaluating-an-AM–FM-Component-1","page":"AM–FM Components","title":"Evaluating an AM–FM Component","text":"","category":"section"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"Once an  AM–FM component AMFMcomp is defined it can be evaluated at a time instant Float64","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"julia> t₀ = 0.15\njulia> ψ₀(t₀)\n-0.302141748563871 + 0.9298966854483709im","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"or over a range of time instants Array{Float64,1}.","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"julia> t = 0.0:0.25:1.0\njulia> ψ₀(t)\n5-element Array{Complex{Float64},1}:\n                 1.0 + 0.0im\n -0.9394130628134758 + 1.1504492004517347e-16im\n  0.7788007830714049 - 1.9075117723236962e-16im\n  -0.569782824730923 + 2.0933481375475864e-16im\n 0.36787944117144233 - 1.8020895204108955e-16im","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"Another example of evaluating an AM–FM component over a range of time instants using the Plots module follows.","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"using Plots\nt = 0.0:0.005:2.0\np1 = plot(t, real(ψ₀(t)), xlab=\"t\", ylab=\"real\", legend = :false)\np2 = plot(t, imag(ψ₀(t)), xlab=\"t\", ylab=\"imag\", legend = :false)\nplot(p1, p2, layout = (2,1))","category":"page"},{"location":"basics/components/#","page":"AM–FM Components","title":"AM–FM Components","text":"(Image: )","category":"page"},{"location":"basics/models/#AM–FM-Models-1","page":"AM–FM Models","title":"AM–FM Models","text":"","category":"section"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"A component set Array{Tuple{Function,Function,Real},1} maps to an AM–FM model AMFMmodel.","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"zleft( t  mathscrS vphantom0^0right)  triangleq sumlimits_k=0^K-1psi_kleft( t  mathscrC_k vphantom0^0right)mathscrStriangleqleftmathscrC_0mathscrC_1cdotsmathscrC_K-1vphantom0^0right","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"This mapping is provided in the ISA module.","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"using ISA","category":"page"},{"location":"basics/models/#Defining-an-AM–FM-Model-1","page":"AM–FM Models","title":"Defining an AM–FM Model","text":"","category":"section"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"We can define an AM–FM model as follows. First, define a component set.","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"a₀(t) = exp(-t^2)\nω₀(t) = 2.0\nφ₀ = 0.0\n𝐶₀ = (a₀,ω₀,φ₀)\n\na₁(t) = 1.0\nω₁(t) = 10*t\nφ₁ = 0.1\n𝐶₁ = (a₁,ω₁,φ₁)\n\na₂(t) = 0.8*cos(2t)\nω₂(t) = 10 + 7.5*sin(t)\nφ₂ = π\n𝐶₂ = (a₂,ω₂,φ₂)\n\n𝑆 = [𝐶₀,𝐶₁,𝐶₂]","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"Then, pass the component set to the function AMFMmodel().","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"z = AMFMmodel(𝑆)","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"We also allow an AM–FM model AMFMmodel to be defined by passing an array of AMFMcomp to the function AMFMmodel(). First, define the components.","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"a₀(t) = exp(-t^2)\nω₀(t) = 2.0\nφ₀ = 0.0\nψ₀ = AMFMcomp(a₀,ω₀,φ₀)\n\na₁(t) = 1.0\nω₁(t) = 10*t\nφ₁ = 0.1\nψ₁ = AMFMcomp(a₁,ω₁,φ₁)\n\na₂(t) = 0.8*cos(2t)\nω₂(t) = 10 + 7.5*sin(t)\nφ₂ = π\nψ₂ = AMFMcomp(a₂,ω₂,φ₂)","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"Then pass the array of AMFMcomp to the function AMFMmodel().","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"z = AMFMmodel([ψ₀,ψ₁,ψ₂])","category":"page"},{"location":"basics/models/#Evaluating-an-AM–FM-Model-1","page":"AM–FM Models","title":"Evaluating an AM–FM Model","text":"","category":"section"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"Once an  AM–FM model AMFMmodel is defined it can be evaluated at a time instant Float64","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"julia> t₀ = 0.15\njulia> z(t₀)\n-0.1844131722041218 + 1.146808452231523im","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"or over a range of time instants Array{Float64,1}.","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"julia> t = 0.0:0.25:1.0\njulia> z(t)\n5-element Array{Complex{Float64},1}:\n  2.3127623746121317 + 1.2092678279852234im\n -1.2963995650827416 + 0.025282127799684584im\n  0.5931797251405191 + 0.9674372363846413im\n 0.25073410019471093 - 0.5690871746595758im\n  1.4587415832942454 + 0.7649782375222325im","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"Another example of evaluating an AM–FM model over a range of time instants using the Plots module follows.","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"using Plots\nt = 0.0:0.005:2.0\np1 = plot(t, real(z(t)), xlab=\"t\", ylab=\"real\", legend = :false)\np2 = plot(t, imag(z(t)), xlab=\"t\", ylab=\"imag\", legend = :false)\nplot(p1, p2, layout = (2,1))","category":"page"},{"location":"basics/models/#","page":"AM–FM Models","title":"AM–FM Models","text":"(Image: )","category":"page"}]
}
